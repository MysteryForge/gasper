name: Build

on:
  workflow_dispatch:

env:
  CR_PAT: ${{ secrets.CR_PAT }}
  RELEASE_TOKEN: ${{ secrets.RELEASES_ACTION_GITHUB_TOKEN }}
  IMAGE_NAME: ghcr.io/mysteryforge/gasper

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: build/cache
          key: ${{ runner.os }}-build-tools-cache-${{ hashFiles('build/checksums.txt') }}

      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
        with:
          version: v2.1

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: build/cache
          key: ${{ runner.os }}-build-tools-cache-${{ hashFiles('build/checksums.txt') }}

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: 1.24
          cache: false

      - name: Run tests
        run: go test -short ./...

  build_binary:
    name: Build Binary
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            artifact: gasper-linux-amd64.tar.gz
          - os: linux
            arch: arm64
            artifact: gasper-linux-arm64.tar.gz
          - os: darwin
            arch: amd64
            artifact: gasper-darwin-amd64.tar.gz
          - os: darwin
            arch: arm64
            artifact: gasper-darwin-arm64.tar.gz
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: 1.24
          cache: false

      - name: Get xk6ea
        run: |
          go install go.k6.io/xk6/cmd/xk6@a9915b8e1519a26cbfbbafb93cd4159ff0e617e8
          echo "PATH=$PATH:$(go env GOPATH)/bin" >> $GITHUB_ENV
          # Verify installation
          which xk6 || echo "xk6 not found in PATH"

      - name: Build
        run: |
          make build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Package
        run: |
          # Make sure the binary exists
          ls -la bin/gasper

          # Create tar archive with verbose output
          tar -cvzf ${{ matrix.artifact }} -C bin gasper

          # Verify the archive
          file ${{ matrix.artifact }}
          tar -tvf ${{ matrix.artifact }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build_binary
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Download Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          path: ./artifacts

      - name: List downloaded files
        run: ls -R ./artifacts

      - name: Get short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          name: Release ${{ steps.sha.outputs.short_sha }}
          tag_name: sha-${{ steps.sha.outputs.short_sha }}
          draft: false
          prerelease: false
          files: |
            ./artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ env.RELEASE_TOKEN }}

  build_docker:
    name: Build Docker
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@418e4b98bf2841bd337d0b24fe63cb36dc8afa55
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
